<?php

namespace frontend\modules\controllers;

use common\models\db\Region;
use common\models\Query\LotsCategory;
use frontend\modules\models\Category;
use Yii;
use common\models\db\Lot;
use frontend\modules\models\LotSearch;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

/**
 * LotController implements the CRUD actions for Lot model.
 */
class LotController extends Controller
{
    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Lot models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new LotSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        $lots = $dataProvider->getModels();

        if (Yii::$app->request->isAjax) {
            return $this->renderPartial('lotBlockAjax', [
                'type' => 'long',
                'lots' => $lots,
            ]);
        }

        $regionList = ArrayHelper::map(Region::find()->orderBy(['name' => SORT_ASC])->all(), 'id', 'name');

        return $this->render('index', [
            'model'         => $searchModel,
            'lots'          => $lots,
            'queryCategory' => 0,
            'type'          => 'bankrupt',
            'regionList'    => $regionList,
        ]);
    }

    /**
     * Displays a single Lot model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'lot' => $this->findModel($id),
            'type'  => 'bankrupt'
        ]);
    }

    public function actionLoadSubCategories()
    {
        $post = Yii::$app->request->post();

        if ($post[ 'get' ] == 'category') {
            $lotsCategory = LotsCategory::find()->orderBy('id ASC')->all();
            $result = '<option value="0">Все категории</option>';
            foreach ($lotsCategory as $value) {
                $result .= '<option value="' . $value->id . '">' . $value->name . '</option>';
            }
        } else {
            $subCategories = Category::findOne(['id' => $post[ 'id' ]]);
            $leaves = $subCategories->leaves()->all();

            $result = '<option value="0">Все подкатегории</option>';
            if ($leaves != null) {
                foreach ($leaves as $value) {
                    $result .= '<option value="' . $value->id . '">' . $value->name . '</option>';
                }
            }
        }

        return $result;
    }

    /**
     * Finds the Lot model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Lot|null
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        $model = Lot::findOne($id);

        if ($model !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
